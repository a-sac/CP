This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013/Debian) (format=pdflatex 2017.6.13)  13 JUN 2017 23:29
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**cp1617t
(./cp1617t.tex
LaTeX2e <2011/06/27>
Babel <3.9h> and hyphenation patterns for 78 languages loaded.
(/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2007/10/19 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
(/usr/share/texlive/texmf-dist/tex/latex/geometry/geometry.sty
Package: geometry 2010/09/12 v5.6 Page Geometry

(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
\KV@toks@=\toks14
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifpdf.sty
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifvtex.sty
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
)
(/usr/share/texlive/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
\Gm@cnth=\count87
\Gm@cntv=\count88
\c@Gm@tempcnt=\count89
\Gm@bindingoffset=\dimen103
\Gm@wd@mp=\dimen104
\Gm@odd@mp=\dimen105
\Gm@even@mp=\dimen106
\Gm@layoutwidth=\dimen107
\Gm@layoutheight=\dimen108
\Gm@layouthoffset=\dimen109
\Gm@layoutvoffset=\dimen110
\Gm@dimlist=\toks15
)
(/usr/share/texlive/texmf-dist/tex/latex/psnfss/palatino.sty
Package: palatino 2005/04/12 PSNFSS-v9.2a (SPQR) 
)
(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2012/11/06 v6.83m Hypertext links for LaTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2012/05/28 v1.13 Bundle oberdiek, subset hyperref (HO)


(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2012/05/28 v1.13 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/05/28 v1.13 Construct package bundles (HO)
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package hobsub Info: Skipping package `ifvtex' (already loaded).
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package hobsub Info: Skipping package `ifpdf' (already loaded).
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2012/05/28 v1.2 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/auxhook.sty
Package: auxhook 2011/03/04 v1.3 Hooks for auxiliary files (HO)
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
)
\@linkdim=\dimen111
\Hy@linkcounter=\count90
\Hy@pagecounter=\count91

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2012/11/06 v6.83m Hyperref: PDFDocEncoding definition (HO)
)
\Hy@SavedSpaceFactor=\count92

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `colorlinks' set `true' on input line 4319.
Package hyperref Info: Hyper figures OFF on input line 4443.
Package hyperref Info: Link nesting OFF on input line 4448.
Package hyperref Info: Hyper index ON on input line 4451.
Package hyperref Info: Plain pages OFF on input line 4458.
Package hyperref Info: Backreferencing OFF on input line 4463.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4688.
\c@Hy@tempcnt=\count93

(/usr/share/texlive/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip10
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 5041.
\XeTeXLinkMargin=\dimen112
\Fld@menulength=\count94
\Field@Width=\dimen113
\Fld@charsize=\dimen114
Package hyperref Info: Hyper figures OFF on input line 6295.
Package hyperref Info: Link nesting OFF on input line 6300.
Package hyperref Info: Hyper index ON on input line 6303.
Package hyperref Info: backreferencing OFF on input line 6310.
Package hyperref Info: Link coloring ON on input line 6313.
Package hyperref Info: Link coloring with OCG OFF on input line 6320.
Package hyperref Info: PDF/A mode OFF on input line 6325.
LaTeX Info: Redefining \ref on input line 6365.
LaTeX Info: Redefining \pageref on input line 6369.
\Hy@abspage=\count95
\c@Item=\count96
\c@Hfootnote=\count97
)

Package hyperref Message: Driver (autodetected): hpdftex.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hpdftex.def
File: hpdftex.def 2012/11/06 v6.83m Hyperref driver for pdfTeX
\Fld@listcount=\count98
\c@bookmark@seq@number=\count99

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/rerunfilecheck.sty
Package: rerunfilecheck 2011/04/15 v1.7 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
)
\Hy@SectionHShift=\skip43
)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 1999/02/16 v1.0f Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2009/02/05 v1.0o Standard LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 1999/03/16 v1.09 sin cos tan (DPC)
)
(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: pdftex.def on input line 91.

(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX
\Gread@gobject=\count100
))
\Gin@req@height=\dimen115
\Gin@req@width=\dimen116
)
(./cp1617t.sty (/usr/share/texlive/texmf-dist/tex/latex/base/fleqn.sty

LaTeX Warning: inputting `fleqn.clo' instead of obsolete `fleqn.sty'.

(/usr/share/texlive/texmf-dist/tex/latex/base/fleqn.clo
File: fleqn.clo 1998/08/17 v1.1c Standard LaTeX option (flush left equations)
\mathindent=\dimen117
))
(/usr/share/texlive/texmf-dist/tex/generic/babel/babel.sty
Package: babel 2013/12/03 3.9h The Babel package

(/usr/share/texlive/texmf-dist/tex/generic/babel-portuges/portuges.ldf
Language: portuges 2008/03/18 v1.2q Portuguese support from the babel system

(/usr/share/texlive/texmf-dist/tex/generic/babel/babel.def
File: babel.def 2013/12/03 3.9h Babel common definitions
\babel@savecnt=\count101
\U@D=\dimen118
)
Package babel Info: Making " an active character on input line 145.
))
(/usr/share/texlive/texmf-dist/tex/latex/base/inputenc.sty
Package: inputenc 2008/03/30 v1.1d Input encoding file
\inpenc@prehook=\toks16
\inpenc@posthook=\toks17

(/usr/share/texlive/texmf-dist/tex/latex/base/utf8.def
File: utf8.def 2008/04/05 v1.1m UTF-8 support for inputenc
Now handling font encoding OML ...
... no UTF-8 mapping file for font encoding OML
Now handling font encoding T1 ...
... processing UTF-8 mapping file for font encoding T1

(/usr/share/texlive/texmf-dist/tex/latex/base/t1enc.dfu
File: t1enc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
   defining Unicode char U+00A1 (decimal 161)
   defining Unicode char U+00A3 (decimal 163)
   defining Unicode char U+00AB (decimal 171)
   defining Unicode char U+00BB (decimal 187)
   defining Unicode char U+00BF (decimal 191)
   defining Unicode char U+00C0 (decimal 192)
   defining Unicode char U+00C1 (decimal 193)
   defining Unicode char U+00C2 (decimal 194)
   defining Unicode char U+00C3 (decimal 195)
   defining Unicode char U+00C4 (decimal 196)
   defining Unicode char U+00C5 (decimal 197)
   defining Unicode char U+00C6 (decimal 198)
   defining Unicode char U+00C7 (decimal 199)
   defining Unicode char U+00C8 (decimal 200)
   defining Unicode char U+00C9 (decimal 201)
   defining Unicode char U+00CA (decimal 202)
   defining Unicode char U+00CB (decimal 203)
   defining Unicode char U+00CC (decimal 204)
   defining Unicode char U+00CD (decimal 205)
   defining Unicode char U+00CE (decimal 206)
   defining Unicode char U+00CF (decimal 207)
   defining Unicode char U+00D0 (decimal 208)
   defining Unicode char U+00D1 (decimal 209)
   defining Unicode char U+00D2 (decimal 210)
   defining Unicode char U+00D3 (decimal 211)
   defining Unicode char U+00D4 (decimal 212)
   defining Unicode char U+00D5 (decimal 213)
   defining Unicode char U+00D6 (decimal 214)
   defining Unicode char U+00D8 (decimal 216)
   defining Unicode char U+00D9 (decimal 217)
   defining Unicode char U+00DA (decimal 218)
   defining Unicode char U+00DB (decimal 219)
   defining Unicode char U+00DC (decimal 220)
   defining Unicode char U+00DD (decimal 221)
   defining Unicode char U+00DE (decimal 222)
   defining Unicode char U+00DF (decimal 223)
   defining Unicode char U+00E0 (decimal 224)
   defining Unicode char U+00E1 (decimal 225)
   defining Unicode char U+00E2 (decimal 226)
   defining Unicode char U+00E3 (decimal 227)
   defining Unicode char U+00E4 (decimal 228)
   defining Unicode char U+00E5 (decimal 229)
   defining Unicode char U+00E6 (decimal 230)
   defining Unicode char U+00E7 (decimal 231)
   defining Unicode char U+00E8 (decimal 232)
   defining Unicode char U+00E9 (decimal 233)
   defining Unicode char U+00EA (decimal 234)
   defining Unicode char U+00EB (decimal 235)
   defining Unicode char U+00EC (decimal 236)
   defining Unicode char U+00ED (decimal 237)
   defining Unicode char U+00EE (decimal 238)
   defining Unicode char U+00EF (decimal 239)
   defining Unicode char U+00F0 (decimal 240)
   defining Unicode char U+00F1 (decimal 241)
   defining Unicode char U+00F2 (decimal 242)
   defining Unicode char U+00F3 (decimal 243)
   defining Unicode char U+00F4 (decimal 244)
   defining Unicode char U+00F5 (decimal 245)
   defining Unicode char U+00F6 (decimal 246)
   defining Unicode char U+00F8 (decimal 248)
   defining Unicode char U+00F9 (decimal 249)
   defining Unicode char U+00FA (decimal 250)
   defining Unicode char U+00FB (decimal 251)
   defining Unicode char U+00FC (decimal 252)
   defining Unicode char U+00FD (decimal 253)
   defining Unicode char U+00FE (decimal 254)
   defining Unicode char U+00FF (decimal 255)
   defining Unicode char U+0102 (decimal 258)
   defining Unicode char U+0103 (decimal 259)
   defining Unicode char U+0104 (decimal 260)
   defining Unicode char U+0105 (decimal 261)
   defining Unicode char U+0106 (decimal 262)
   defining Unicode char U+0107 (decimal 263)
   defining Unicode char U+010C (decimal 268)
   defining Unicode char U+010D (decimal 269)
   defining Unicode char U+010E (decimal 270)
   defining Unicode char U+010F (decimal 271)
   defining Unicode char U+0110 (decimal 272)
   defining Unicode char U+0111 (decimal 273)
   defining Unicode char U+0118 (decimal 280)
   defining Unicode char U+0119 (decimal 281)
   defining Unicode char U+011A (decimal 282)
   defining Unicode char U+011B (decimal 283)
   defining Unicode char U+011E (decimal 286)
   defining Unicode char U+011F (decimal 287)
   defining Unicode char U+0130 (decimal 304)
   defining Unicode char U+0131 (decimal 305)
   defining Unicode char U+0132 (decimal 306)
   defining Unicode char U+0133 (decimal 307)
   defining Unicode char U+0139 (decimal 313)
   defining Unicode char U+013A (decimal 314)
   defining Unicode char U+013D (decimal 317)
   defining Unicode char U+013E (decimal 318)
   defining Unicode char U+0141 (decimal 321)
   defining Unicode char U+0142 (decimal 322)
   defining Unicode char U+0143 (decimal 323)
   defining Unicode char U+0144 (decimal 324)
   defining Unicode char U+0147 (decimal 327)
   defining Unicode char U+0148 (decimal 328)
   defining Unicode char U+014A (decimal 330)
   defining Unicode char U+014B (decimal 331)
   defining Unicode char U+0150 (decimal 336)
   defining Unicode char U+0151 (decimal 337)
   defining Unicode char U+0152 (decimal 338)
   defining Unicode char U+0153 (decimal 339)
   defining Unicode char U+0154 (decimal 340)
   defining Unicode char U+0155 (decimal 341)
   defining Unicode char U+0158 (decimal 344)
   defining Unicode char U+0159 (decimal 345)
   defining Unicode char U+015A (decimal 346)
   defining Unicode char U+015B (decimal 347)
   defining Unicode char U+015E (decimal 350)
   defining Unicode char U+015F (decimal 351)
   defining Unicode char U+0160 (decimal 352)
   defining Unicode char U+0161 (decimal 353)
   defining Unicode char U+0162 (decimal 354)
   defining Unicode char U+0163 (decimal 355)
   defining Unicode char U+0164 (decimal 356)
   defining Unicode char U+0165 (decimal 357)
   defining Unicode char U+016E (decimal 366)
   defining Unicode char U+016F (decimal 367)
   defining Unicode char U+0170 (decimal 368)
   defining Unicode char U+0171 (decimal 369)
   defining Unicode char U+0178 (decimal 376)
   defining Unicode char U+0179 (decimal 377)
   defining Unicode char U+017A (decimal 378)
   defining Unicode char U+017B (decimal 379)
   defining Unicode char U+017C (decimal 380)
   defining Unicode char U+017D (decimal 381)
   defining Unicode char U+017E (decimal 382)
   defining Unicode char U+200C (decimal 8204)
   defining Unicode char U+2013 (decimal 8211)
   defining Unicode char U+2014 (decimal 8212)
   defining Unicode char U+2018 (decimal 8216)
   defining Unicode char U+2019 (decimal 8217)
   defining Unicode char U+201A (decimal 8218)
   defining Unicode char U+201C (decimal 8220)
   defining Unicode char U+201D (decimal 8221)
   defining Unicode char U+201E (decimal 8222)
   defining Unicode char U+2030 (decimal 8240)
   defining Unicode char U+2031 (decimal 8241)
   defining Unicode char U+2039 (decimal 8249)
   defining Unicode char U+203A (decimal 8250)
   defining Unicode char U+2423 (decimal 9251)
)
Now handling font encoding OT1 ...
... processing UTF-8 mapping file for font encoding OT1

(/usr/share/texlive/texmf-dist/tex/latex/base/ot1enc.dfu
File: ot1enc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
   defining Unicode char U+00A1 (decimal 161)
   defining Unicode char U+00A3 (decimal 163)
   defining Unicode char U+00B8 (decimal 184)
   defining Unicode char U+00BF (decimal 191)
   defining Unicode char U+00C5 (decimal 197)
   defining Unicode char U+00C6 (decimal 198)
   defining Unicode char U+00D8 (decimal 216)
   defining Unicode char U+00DF (decimal 223)
   defining Unicode char U+00E6 (decimal 230)
   defining Unicode char U+00EC (decimal 236)
   defining Unicode char U+00ED (decimal 237)
   defining Unicode char U+00EE (decimal 238)
   defining Unicode char U+00EF (decimal 239)
   defining Unicode char U+00F8 (decimal 248)
   defining Unicode char U+0131 (decimal 305)
   defining Unicode char U+0141 (decimal 321)
   defining Unicode char U+0142 (decimal 322)
   defining Unicode char U+0152 (decimal 338)
   defining Unicode char U+0153 (decimal 339)
   defining Unicode char U+2013 (decimal 8211)
   defining Unicode char U+2014 (decimal 8212)
   defining Unicode char U+2018 (decimal 8216)
   defining Unicode char U+2019 (decimal 8217)
   defining Unicode char U+201C (decimal 8220)
   defining Unicode char U+201D (decimal 8221)
)
Now handling font encoding OMS ...
... processing UTF-8 mapping file for font encoding OMS

(/usr/share/texlive/texmf-dist/tex/latex/base/omsenc.dfu
File: omsenc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
   defining Unicode char U+00A7 (decimal 167)
   defining Unicode char U+00B6 (decimal 182)
   defining Unicode char U+00B7 (decimal 183)
   defining Unicode char U+2020 (decimal 8224)
   defining Unicode char U+2021 (decimal 8225)
   defining Unicode char U+2022 (decimal 8226)
)
Now handling font encoding OMX ...
... no UTF-8 mapping file for font encoding OMX
Now handling font encoding U ...
... no UTF-8 mapping file for font encoding U
Now handling font encoding PD1 ...
... no UTF-8 mapping file for font encoding PD1
   defining Unicode char U+00A9 (decimal 169)
   defining Unicode char U+00AA (decimal 170)
   defining Unicode char U+00AE (decimal 174)
   defining Unicode char U+00BA (decimal 186)
   defining Unicode char U+02C6 (decimal 710)
   defining Unicode char U+02DC (decimal 732)
   defining Unicode char U+200C (decimal 8204)
   defining Unicode char U+2026 (decimal 8230)
   defining Unicode char U+2122 (decimal 8482)
   defining Unicode char U+2423 (decimal 9251)
))
(/usr/share/texlive/texmf-dist/tex/latex/fancyvrb/fancyvrb.sty
Package: fancyvrb 2008/02/07

Style option: `fancyvrb' v2.7a, with DG/SPQR fixes, and firstline=lastline fix 
<2008/02/07> (tvz)
\FV@CodeLineNo=\count102
\FV@InFile=\read1
\FV@TabBox=\box26
\c@FancyVerbLine=\count103
\FV@StepNumber=\count104
\FV@OutFile=\write3
) (/usr/share/texlive/texmf-dist/tex/generic/xypic/xy.sty
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xy.tex Bootstrap'ing:
catcodes, docmode, (/usr/share/texlive/texmf-dist/tex/generic/xypic/xyrecat.tex
) (/usr/share/texlive/texmf-dist/tex/generic/xypic/xyidioms.tex)

 Xy-pic version 3.8.9 <2013/10/06>
 Copyright (c) 1991-2013 by Kristoffer H. Rose <krisrose@tug.org> and others
 Xy-pic is free software: see the User's Guide for details.

Loading kernel: messages; fonts; allocations: state,
\X@c=\dimen119
\Y@c=\dimen120
\U@c=\dimen121
\D@c=\dimen122
\L@c=\dimen123
\R@c=\dimen124
\Edge@c=\toks18
\X@p=\dimen125
\Y@p=\dimen126
\U@p=\dimen127
\D@p=\dimen128
\L@p=\dimen129
\R@p=\dimen130
\Edge@p=\toks19
\X@origin=\dimen131
\Y@origin=\dimen132
\X@xbase=\dimen133
\Y@xbase=\dimen134
\X@ybase=\dimen135
\Y@ybase=\dimen136
\X@min=\dimen137
\Y@min=\dimen138
\X@max=\dimen139
\Y@max=\dimen140
\lastobjectbox@=\box27
\zerodotbox@=\box28
\almostz@=\dimen141
 direction,
\d@X=\dimen142
\d@Y=\dimen143
\K@=\count105
\KK@=\count106
\Direction=\count107
\K@dXdY=\dimen144
\K@dYdX=\dimen145
\xyread@=\read2
\xywrite@=\write4
\csp@=\count108
\quotPTK@=\dimen146

utility macros; pictures: \xy, positions,
\swaptoks@@=\toks20
\connectobjectbox@@=\box29
 objects,
\styletoks@=\toks21
 decorations;
kernel objects: directionals, circles, text; options; algorithms: directions,
edges, connections;  Xy-pic loaded)
Package: xy 2013/10/06 Xy-pic version 3.8.9

(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyall.tex
 Xy-pic option: All features v.3.8
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xycurve.tex
 Xy-pic option: Curve and Spline extension v.3.12 curve,
\crv@cnt@=\count109
\crvpts@=\toks22
\splinebox@=\box30
\splineval@=\dimen147
\splinedepth@=\dimen148
\splinetol@=\dimen149
\splinelength@=\dimen150
 circles,
\L@=\dimen151
 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyframe.tex
 Xy-pic option: Frame and Bracket extension v.3.14 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xycmtip.tex
 Xy-pic option: Computer Modern tip extension v.3.7
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xytips.tex
 Xy-pic option: More Tips extension v.3.11 loaded) loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyline.tex
 Xy-pic option: Line styles extension v.3.10
\xylinethick@=\dimen152
 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyrotate.tex
 Xy-pic option: Rotate and Scale extension v.3.8 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xycolor.tex
 Xy-pic option: Colour extension v.3.11 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xymatrix.tex
 Xy-pic option: Matrix feature v.3.14
\Row=\count110
\Col=\count111
\queue@=\toks23
\queue@@=\toks24
\qcount@=\count112
\qcount@@=\count113
\matrixsize@=\count114
 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyarrow.tex
 Xy-pic option: Arrow and Path feature v.3.9 path, \ar, loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xygraph.tex
 Xy-pic option: Graph feature v.3.11 loaded) loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf.tex
 Xy-pic option: PDF driver v.1.7 Xy-pic pdf driver: `color' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-co.tex loaded)
Xy-pic pdf driver: `curve' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-cu.tex loaded)
Xy-pic pdf driver: `frame' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-fr.tex loaded)
Xy-pic pdf driver: `line' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-li.tex loaded)
Xy-pic pdf driver: `rotate' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-ro.tex loaded) loaded))
(/usr/share/texlive/texmf-dist/tex/latex/base/makeidx.sty
Package: makeidx 2000/03/29 v1.0m Standard LaTeX package
))
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01

(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0
\@emptytoks=\toks25
\ex@=\dimen153
))
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
))
(/usr/share/texlive/texmf-dist/tex/latex/stmaryrd/stmaryrd.sty
Package: stmaryrd 1994/03/03 St Mary's Road symbol package
\symstmry=\mathgroup6
LaTeX Font Info:    Overwriting symbol font `stmry' in version `bold'
(Font)                  U/stmry/m/n --> U/stmry/b/n on input line 89.
)
(/usr/share/texmf/tex/latex/polytable/polytable.sty
Package: polytable 2009/11/01 v0.8.4 `polytable' package (Andres Loeh)

(/usr/share/texmf/tex/latex/polytable/lazylist.sty)
(/usr/share/texlive/texmf-dist/tex/latex/tools/array.sty
Package: array 2008/09/09 v2.4c Tabular extension package (FMi)
\col@sep=\dimen154
\extrarowheight=\dimen155
\NC@list=\toks26
\extratabsurround=\skip44
\backup@length=\skip45
)
\PT@colwidth=\dimen156
\PT@cols=\count115
\PT@table=\count116
\PT@toks=\toks27
\PT@in=\read3
\PT@out=\write5
)
\blanklineskip=\skip46

(/usr/share/texlive/texmf-dist/tex/latex/tools/calc.sty
Package: calc 2007/08/22 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count117
\calc@Bcount=\count118
\calc@Adimen=\dimen157
\calc@Bdimen=\dimen158
\calc@Askip=\skip47
\calc@Bskip=\skip48
LaTeX Info: Redefining \setlength on input line 76.
LaTeX Info: Redefining \addtolength on input line 77.
\calc@Ccount=\count119
\calc@Cskip=\skip49
)
\@indexfile=\write6
\openout6 = `cp1617t.idx'.


Writing index file cp1617t.idx
(./cp1617t.aux)
\openout1 = `cp1617t.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 293.
LaTeX Font Info:    ... okay on input line 293.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 293.
LaTeX Font Info:    ... okay on input line 293.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 293.
LaTeX Font Info:    ... okay on input line 293.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 293.
LaTeX Font Info:    ... okay on input line 293.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 293.
LaTeX Font Info:    ... okay on input line 293.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 293.
LaTeX Font Info:    ... okay on input line 293.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 293.
LaTeX Font Info:    ... okay on input line 293.
LaTeX Font Info:    Try loading font information for OT1+ppl on input line 293.

 (/usr/share/texlive/texmf-dist/tex/latex/psnfss/ot1ppl.fd
File: ot1ppl.fd 2001/06/04 font definitions for OT1/ppl.
)
*geometry* driver: auto-detecting
*geometry* detected driver: pdftex
*geometry* verbose mode - [ preamble ] result:
* driver: pdftex
* paper: a4paper
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* modes: 
* h-part:(L,W,R)=(85.35826pt, 455.24411pt, 56.9055pt)
* v-part:(T,H,B)=(71.13188pt, 702.78308pt, 71.13188pt)
* \paperwidth=597.50787pt
* \paperheight=845.04684pt
* \textwidth=455.24411pt
* \textheight=702.78308pt
* \oddsidemargin=13.08827pt
* \evensidemargin=13.08827pt
* \topmargin=-38.1381pt
* \headheight=12.0pt
* \headsep=25.0pt
* \topskip=10.0pt
* \footskip=30.0pt
* \marginparwidth=57.0pt
* \marginparsep=11.0pt
* \columnsep=10.0pt
* \skip\footins=9.0pt plus 4.0pt minus 2.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidefalse
* \@mparswitchfalse
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

\AtBeginShipoutBox=\box31
(/usr/share/texlive/texmf-dist/tex/latex/graphics/color.sty
Package: color 2005/11/14 v1.0j Standard LaTeX Color (DPC)

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: pdftex.def on input line 130.
)
Package hyperref Info: Link coloring ON on input line 293.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2012/10/27 v2.43 Cross-referencing by name of section

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count120
)
LaTeX Info: Redefining \ref on input line 293.
LaTeX Info: Redefining \pageref on input line 293.
LaTeX Info: Redefining \nameref on input line 293.

(./cp1617t.out) (./cp1617t.out)
\@outlinefile=\write7
\openout7 = `cp1617t.out'.


(/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count121
\scratchdimen=\dimen159
\scratchbox=\box32
\nofMPsegments=\count122
\nofMParguments=\count123
\everyMPshowfont=\toks28
\MPscratchCnt=\count124
\MPscratchDim=\dimen160
\MPnumerator=\count125
\makeMPintoPDFobject=\count126
\everyMPtoPDFconversion=\toks29
) (/usr/share/texlive/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)
)
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 452.

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
LaTeX Font Info:    Try loading font information for U+msa on input line 293.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 293.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
LaTeX Font Info:    Try loading font information for U+stmry on input line 293.


(/usr/share/texlive/texmf-dist/tex/latex/stmaryrd/Ustmry.fd)
Package xypdf Info: Line width: 0.39998pt on input line 293.
LaTeX Font Info:    Font shape `OT1/ppl/bx/n' in size <12> not available
(Font)              Font shape `OT1/ppl/b/n' tried instead on input line 299.
LaTeX Font Info:    Font shape `OT1/ppl/bx/n' in size <14.4> not available
(Font)              Font shape `OT1/ppl/b/n' tried instead on input line 310.
 (./cp1617t.toc
LaTeX Font Info:    Font shape `OT1/ppl/bx/n' in size <10> not available
(Font)              Font shape `OT1/ppl/b/n' tried instead on input line 2.
)
\tf@toc=\write8
\openout8 = `cp1617t.toc'.


[1

{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}]
LaTeX Font Info:    Try loading font information for OT1+pcr on input line 343.


(/usr/share/texlive/texmf-dist/tex/latex/psnfss/ot1pcr.fd
File: ot1pcr.fd 2001/06/04 font definitions for OT1/pcr.
)
\openout5 = `cp1617t.ptb'.

LaTeX Font Info:    Try loading font information for OMS+ppl on input line 418.


(/usr/share/texlive/texmf-dist/tex/latex/psnfss/omsppl.fd
File: omsppl.fd 
)
LaTeX Font Info:    Font shape `OMS/ppl/m/n' in size <10> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 418.

! Missing $ inserted.
<inserted text> 
                $
l.418 \end{hscode}
                  \resethooks
? r
OK, entering \nonstopmode...
! Extra }, or forgotten $.
\mbox #1->\leavevmode \hbox {#1}
                                
l.418 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing } inserted.
<inserted text> 
                }
l.418 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.418 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.418 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
\mbox #1->\leavevmode \hbox {#1}
                                
l.418 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing } inserted.
<inserted text> 
                }
l.418 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.418 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.418 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
\mbox #1->\leavevmode \hbox {#1}
                                
l.418 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing } inserted.
<inserted text> 
                }
l.418 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.418 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[2] [3]
\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

 <cp1617t_media/B-tree.jpg, id=101, 801.99625pt x 222.8325pt>
File: cp1617t_media/B-tree.jpg Graphic file (type jpg)

<use cp1617t_media/B-tree.jpg>
Package pdftex.def Info: cp1617t_media/B-tree.jpg used on input line 571.
(pdftex.def)             Requested size: 227.62206pt x 63.2427pt.
 [4]
\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.


Overfull \hbox (44.29572pt too wide) in paragraph at lines 659--660
[]$\OT1/cmr/m/it/9 t [] [] \OT1/cmr/m/n/9 (6\OML/cmm/m/it/9 ; \OT1/cmr/m/n/9 ([
] (3\OML/cmm/m/it/9 ; \OT1/cmr/m/n/9 ([] (2\OML/cmm/m/it/9 ; \OT1/cmr/m/n/9 ([]
\OML/cmm/m/it/9 ; []\OT1/cmr/m/n/9 ))\OML/cmm/m/it/9 ; []\OT1/cmr/m/n/9 ))\OML/
cmm/m/it/9 ; [] \OT1/cmr/m/n/9 (7\OML/cmm/m/it/9 ; \OT1/cmr/m/n/9 ([]\OML/cmm/m
/it/9 ; [] \OT1/cmr/m/n/9 (9\OML/cmm/m/it/9 ; \OT1/cmr/m/n/9 ([]\OML/cmm/m/it/9
 ; []\OT1/cmr/m/n/9 ))))))$ 
 []

<cp1617t_media/dot1.jpg, id=114, 394.47375pt x 330.23375pt>
File: cp1617t_media/dot1.jpg Graphic file (type jpg)

<use cp1617t_media/dot1.jpg>
Package pdftex.def Info: cp1617t_media/dot1.jpg used on input line 663.
(pdftex.def)             Requested size: 182.09486pt x 152.43845pt.
 [5 <./cp1617t_media/B-tree.jpg>]
<cp1617t_media/dot2.jpg, id=132, 981.6675pt x 238.8925pt>
File: cp1617t_media/dot2.jpg Graphic file (type jpg)

<use cp1617t_media/dot2.jpg>
Package pdftex.def Info: cp1617t_media/dot2.jpg used on input line 668.
(pdftex.def)             Requested size: 409.71692pt x 99.70354pt.
\openout5 = `cp1617t.ptb'.

 [6 <./cp1617t_media/dot1.jpg> <./cp1617t_media/dot2.jpg>]
\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.


! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.818 Braga  &
               \rule{14.20mm}{3pt}\ 71.4\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

[7] <cp1617t_media/sorteio.jpg, id=162, 1632.0975pt x 422.57875pt>
File: cp1617t_media/sorteio.jpg Graphic file (type jpg)

<use cp1617t_media/sorteio.jpg>
Package pdftex.def Info: cp1617t_media/sorteio.jpg used on input line 830.
(pdftex.def)             Requested size: 455.24411pt x 117.86987pt.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.848 \ensuremath{\Conid{Sporting}} &
                                      \rule{36.379999999999995mm}{3pt}\ 21.4\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.850 \ensuremath{\Conid{Guimaraes}} &
                                       \rule{15.98mm}{3pt}\ 9.4\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.852 \ensuremath{\Conid{Nacional}} &
                                      \rule{8.33mm}{3pt}\ 4.9\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.854 \ensuremath{\Conid{Belenenses}} &
                                        \rule{5.95mm}{3pt}\ 3.5\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.856 \ensuremath{\Conid{Moreirense}} &
                                        \rule{3.23mm}{3pt}\ 1.9\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.858 \ensuremath{\Conid{Arouca}} &
                                    \rule{2.38mm}{3pt}\ 1.4\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.860 \ensuremath{\Conid{Setubal}} &
                                     \rule{2.38mm}{3pt}\ 1.4\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.862 \ensuremath{\Conid{Chaves}} &
                                    \rule{0.68mm}{3pt}\ 0.4\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

[8 <./cp1617t_media/sorteio.jpg>]
\openout5 = `cp1617t.ptb'.

 (./cp1617t.bbl) [9]
LaTeX Font Info:    Font shape `OT1/ppl/bx/n' in size <20.74> not available
(Font)              Font shape `OT1/ppl/b/n' tried instead on input line 931.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.953 B &
          \rule{12mm}{3pt}\ 12\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

! Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.955 D &
          \rule{35mm}{3pt}\ 35\%
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

[10]
\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.


Overfull \hbox (1.64172pt too wide) in paragraph at lines 1135--1139
\OT1/ppl/m/n/10 Os alu-nos de-vem co-lo-car neste anexo as suas solu[][]oes aos
 exerc[]^^Pcios pro-pos-tos, de acordo com o ``layout''
 []

\openout5 = `cp1617t.ptb'.

[11]
\openout5 = `cp1617t.ptb'.


! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1185 ...}\conj{\Varid{inv}}{\Varid{maclaurin}})}
                                                   \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1186     \ensuremath
                      {\Varid{maclaurin}\comp \alt{\underline{\mathrm{0}}}{\...
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1186 ...}\conj{\Varid{inv}}{\Varid{maclaurin}})}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1188 \end{eqnarray*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.


Overfull \hbox (286.3524pt too wide) in alignment at lines 1180--1188
 [][][] []
 []

! Missing $ inserted.
<inserted text> 
                $
l.1195 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1195 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1195 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.1195 
       
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.1195 
       
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1195 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   \par 
l.1195 
       
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
\reserved@a ->&
               
l.1197     \ensuremath
                      {\Varid{inv2v}\;\Varid{x}\;\succ \mathrel{=}\Varid{add...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1197     \ensuremath
                      {\Varid{inv2v}\;\Varid{x}\;\succ \mathrel{=}\Varid{add...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1197     \ensuremath
                      {\Varid{inv2v}\;\Varid{x}\;\succ \mathrel{=}\Varid{add...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1197 ...}\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1197 ...}\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1199 \just={Universal-+}
                          
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1199 \just={Universal-+}
                          
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1199 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1201 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}}}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1201 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}}}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1203 ...{Natural-id; Definição de maclaurin x}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1205 ...\;\Varid{n}}{\Varid{inv2v}\;\Varid{x}}}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1205 ...\;\Varid{n}}{\Varid{inv2v}\;\Varid{x}}}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1207 \just={Absorção-x}
                           
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1207 \just={Absorção-x}
                           
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1207 \just={Absorção-x}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1209 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}}}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1209 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}}}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1211 \just={Absorção-+}
                           
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1211 \just={Absorção-+}
                           
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1211 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1213 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}})}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1213 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}})}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1215 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1215 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1215 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1215 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten \endgroup.
\endeqnarray ->\@@eqncr \egroup 
                                \global \advance \c@equation \m@ne $$\@ignor...
l.1215 \end{eqnarray*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1215 \end{eqnarray*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.1215 \end{eqnarray*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Missing $ inserted.
<inserted text> 
                $
l.1229 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1229 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1229 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.1229 
       
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.1229 
       
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1229 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   \par 
l.1229 
       
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
\reserved@a ->&
               
l.1231     \ensuremath
                      {\Varid{maclaurin}\;\Varid{x}\;\succ \mathrel{=}(\math...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1231     \ensuremath
                      {\Varid{maclaurin}\;\Varid{x}\;\succ \mathrel{=}(\math...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1231     \ensuremath
                      {\Varid{maclaurin}\;\Varid{x}\;\succ \mathrel{=}(\math...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1231 ...athbin{*}(\Varid{maclaurin}\;\Varid{x})}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1231 ...athbin{*}(\Varid{maclaurin}\;\Varid{x})}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1233 \just={Universal-+}
                          
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1233 \just={Universal-+}
                          
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1233 \just={Universal-+}
                          
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1235 ...thbin{*}(\Varid{maclaurin}\;\Varid{x})}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1235 ...thbin{*}(\Varid{maclaurin}\;\Varid{x})}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1237 \just={Natural-id; Cancelamento-x}
                                         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1239 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}}}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1239 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}}}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1241 \just={Absorção-+}
                           
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1241 \just={Absorção-+}
                           
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1241 \just={Absorção-+}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1243 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}})}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1243 ...\;\Varid{x}}{\Varid{inv2v}\;\Varid{x}})}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1245 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1245 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1245 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1245 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten \endgroup.
\endeqnarray ->\@@eqncr \egroup 
                                \global \advance \c@equation \m@ne $$\@ignor...
l.1245 \end{eqnarray*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1245 \end{eqnarray*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.1245 \end{eqnarray*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[12]
! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1259 ...}\conj{\Varid{inv}}{\Varid{maclaurin}})}
                                                   \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1260     \ensuremath
                      {\Varid{maclaurin}\comp \alt{\underline{\mathrm{0}}}{\...
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1260 ...}\conj{\Varid{inv}}{\Varid{maclaurin}})}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1261 \end{eqnarray*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

[13]
! Missing $ inserted.
<inserted text> 
                $
l.1396 ...squema para a melhor compreensão da wc_
                                                  w:
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1397 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1400 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1400 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1400 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.1400 
       
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.1400 
       
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1400 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   \par 
l.1400 
       
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
\reserved@a ->&
               
l.1402         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\;(\Varid{c},\Va...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1402         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\;(\Varid{c},\Va...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1402         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\;(\Varid{c},\Va...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1403                            \ensuremath
                                             {\mathbf{in}\;\mathbf{if}\;(\ne...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1403                            \ensuremath
                                             {\mathbf{in}\;\mathbf{if}\;(\ne...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1403                            \ensuremath
                                             {\mathbf{in}\;\mathbf{if}\;(\ne...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1403                            \ensuremath
                                             {\mathbf{in}\;\mathbf{if}\;(\ne...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1403                            \ensuremath
                                             {\mathbf{in}\;\mathbf{if}\;(\ne...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1404                                 \ensuremath
                                                  {\mathbf{else}\;\p2\comp \...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1404                                 \ensuremath
                                                  {\mathbf{else}\;\p2\comp \...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1404                                 \ensuremath
                                                  {\mathbf{else}\;\p2\comp \...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1404                                 \ensuremath
                                                  {\mathbf{else}\;\p2\comp \...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1404                                 \ensuremath
                                                  {\mathbf{else}\;\p2\comp \...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1406 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1406 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1406 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1406 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten \endgroup.
\endeqnarray ->\@@eqncr \egroup 
                                \global \advance \c@equation \m@ne $$\@ignor...
l.1406 \end{eqnarray*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1406 \end{eqnarray*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.1406 \end{eqnarray*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Missing $ inserted.
<inserted text> 
                $
l.1408 ...mos torná-lo em (id x (split lookahead_
                                                  sep wc_w))
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1409 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1414 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1414 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1414 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.1414 
       
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.1414 
       
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1414 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   \par 
l.1414 
       
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
\reserved@a ->&
               
l.1416         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\;(\Varid{c},\Va...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1416         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\;(\Varid{c},\Va...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1416         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\;(\Varid{c},\Va...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1417         \ensuremath
                          {(\Varid{cond}\;(\neg \comp \Varid{sep}\comp \p1\m...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1417         \ensuremath
                          {(\Varid{cond}\;(\neg \comp \Varid{sep}\comp \p1\m...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1417         \ensuremath
                          {(\Varid{cond}\;(\neg \comp \Varid{sep}\comp \p1\m...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1417         \ensuremath
                          {(\Varid{cond}\;(\neg \comp \Varid{sep}\comp \p1\m...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1417         \ensuremath
                          {(\Varid{cond}\;(\neg \comp \Varid{sep}\comp \p1\m...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1420 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1420 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1420 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1420 \\
         
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1420 \\
         
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1421 \just
            ={Lei 73 - Igualdade extensional}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1421 \just
            ={Lei 73 - Igualdade extensional}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1421 \just
            ={Lei 73 - Igualdade extensional}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1421 \just
            ={Lei 73 - Igualdade extensional}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1421 \just
            ={Lei 73 - Igualdade extensional}
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1421 \just={Lei 73 - Igualdade extensional}
                                             
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1424         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}(\Var...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1424         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}(\Var...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1424         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}(\Var...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1424         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}(\Var...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1424         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}(\Var...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1427 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1427 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1427 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1427 \\
         
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1427 \\
         
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1428 \just
            ={Lei 10 - Igualdade extensional; Lei 1 - Natural-id}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1428 \just
            ={Lei 10 - Igualdade extensional; Lei 1 - Natural-id}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1428 \just
            ={Lei 10 - Igualdade extensional; Lei 1 - Natural-id}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1428 \just
            ={Lei 10 - Igualdade extensional; Lei 1 - Natural-id}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1428 \just
            ={Lei 10 - Igualdade extensional; Lei 1 - Natural-id}
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1428 ...ualdade extensional; Lei 1 - Natural-id}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

[14]
! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1431         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}} \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1431         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}} \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1431         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}} \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1431         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}} \\
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1431         \ensuremath
                          {\Varid{wc\char95 w}\;\Varid{cons}\mathrel{=}} \\
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1432         \ensuremath
                          {(\Varid{cond}\;((\mathrel{\wedge})\comp (\neg \co...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1432         \ensuremath
                          {(\Varid{cond}\;((\mathrel{\wedge})\comp (\neg \co...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1432         \ensuremath
                          {(\Varid{cond}\;((\mathrel{\wedge})\comp (\neg \co...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1432         \ensuremath
                          {(\Varid{cond}\;((\mathrel{\wedge})\comp (\neg \co...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1432         \ensuremath
                          {(\Varid{cond}\;((\mathrel{\wedge})\comp (\neg \co...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1435 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1435 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1435 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1435 \\
         
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1435 \\
         
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1436 \just
            ={Definiçao de in}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1436 \just
            ={Definiçao de in}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1436 \just
            ={Definiçao de in}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1436 \just
            ={Definiçao de in}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1436 \just
            ={Definiçao de in}
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1436 \just={Definiçao de in}
                               
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1436 \just={Definiçao de in}
                               
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1436 \just={Definiçao de in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1441 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1441 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1441 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1441 \\
         
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1441 \\
         
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1442 \just
            ={Lei 2 - Absorçao-+}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1442 \just
            ={Lei 2 - Absorçao-+}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1442 \just
            ={Lei 2 - Absorçao-+}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1442 \just
            ={Lei 2 - Absorçao-+}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1442 \just
            ={Lei 2 - Absorçao-+}
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1442 \just={Lei 2 - Absorçao-+}
                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1447 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1447 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1447 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1447 \\
         
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1447 \\
         
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1448 \just
            ={Ja temos ambas prontas para a regra de Fokkinga}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1448 \just
            ={Ja temos ambas prontas para a regra de Fokkinga}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1448 \just
            ={Ja temos ambas prontas para a regra de Fokkinga}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1448 \just
            ={Ja temos ambas prontas para a regra de Fokkinga}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1448 \just
            ={Ja temos ambas prontas para a regra de Fokkinga}
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1448 ... ambas prontas para a regra de Fokkinga}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1451         \ensuremath
                          {\Varid{wc\char95 w}\comp \mathbf{in}\mathrel{=}} \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1451         \ensuremath
                          {\Varid{wc\char95 w}\comp \mathbf{in}\mathrel{=}} \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1451         \ensuremath
                          {\Varid{wc\char95 w}\comp \mathbf{in}\mathrel{=}} \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1451         \ensuremath
                          {\Varid{wc\char95 w}\comp \mathbf{in}\mathrel{=}} \\
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1451         \ensuremath
                          {\Varid{wc\char95 w}\comp \mathbf{in}\mathrel{=}} \\
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1452         \ensuremath
                          {\alt{\underline{\mathrm{0}}}{\Varid{cond}\;((\mat...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1452         \ensuremath
                          {\alt{\underline{\mathrm{0}}}{\Varid{cond}\;((\mat...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1452         \ensuremath
                          {\alt{\underline{\mathrm{0}}}{\Varid{cond}\;((\mat...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1452         \ensuremath
                          {\alt{\underline{\mathrm{0}}}{\Varid{cond}\;((\mat...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1452         \ensuremath
                          {\alt{\underline{\mathrm{0}}}{\Varid{cond}\;((\mat...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1455 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1455 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1455 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1455 \\
         
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1455 \\
         
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1456 \just
            ={Lei 50 - Fokkinga}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1456 \just
            ={Lei 50 - Fokkinga}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1456 \just
            ={Lei 50 - Fokkinga}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1456 \just
            ={Lei 50 - Fokkinga}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1456 \just
            ={Lei 50 - Fokkinga}
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1456 \just={Lei 50 - Fokkinga}
                                
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1456 \just={Lei 50 - Fokkinga}
                                
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1456 \just={Lei 50 - Fokkinga}
                                
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1461 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1461 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1461 \\
         
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1461 \\
         
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1461 \\
         
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1462 \just
            ={Lei 28 - Lei da troca}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1462 \just
            ={Lei 28 - Lei da troca}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1462 \just
            ={Lei 28 - Lei da troca}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1462 \just
            ={Lei 28 - Lei da troca}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1462 \just
            ={Lei 28 - Lei da troca}
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1462 \just={Lei 28 - Lei da troca}
                                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1462 \just={Lei 28 - Lei da troca}
                                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1462 \just={Lei 28 - Lei da troca}
                                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1466 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1466 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1466 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1466 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten \endgroup.
\endeqnarray ->\@@eqncr \egroup 
                                \global \advance \c@equation \m@ne $$\@ignor...
l.1466 \end{eqnarray*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1466 \end{eqnarray*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.1466 \end{eqnarray*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

\openout5 = `cp1617t.ptb'.


Overfull \hbox (24.23544pt too wide) in paragraph at lines 1468--1483
 [][] 
 []


Overfull \hbox (24.23544pt too wide) in paragraph at lines 1468--1483
 [][] 
 []


Overfull \hbox (24.23544pt too wide) in paragraph at lines 1468--1483
 [][] 
 []


Overfull \hbox (24.23544pt too wide) in paragraph at lines 1468--1483
 [][] 
 []


Overfull \hbox (24.23544pt too wide) in paragraph at lines 1468--1483
 [][] 
 []


Overfull \hbox (24.23544pt too wide) in paragraph at lines 1468--1483
 [][] 
 []

\openout5 = `cp1617t.ptb'.

<xymatrix 2x2 191>
\openout5 = `cp1617t.ptb'.

 [15] <xymatrix 2x2 191>
\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

 <xymatrix 2x2 191>
\openout5 = `cp1617t.ptb'.

 <xymatrix 2x2
191>
\openout5 = `cp1617t.ptb'.

 <xymatrix 2x2 191>
\openout5 = `cp1617t.ptb'.

 <xymatrix 2x3 372> [16]
\openout5 = `cp1617t.ptb'.


Overfull \hbox (6.85762pt too wide) in paragraph at lines 1714--1727
 [][] 
 []


Overfull \hbox (6.85762pt too wide) in paragraph at lines 1714--1727
 [][] 
 []


Overfull \hbox (6.85762pt too wide) in paragraph at lines 1714--1727
 [][] 
 []


Overfull \hbox (6.85762pt too wide) in paragraph at lines 1714--1727
 [][][][] 
 []

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

<xymatrix 2x2 191>
\openout5 = `cp1617t.ptb'.

\openout5 = `cp1617t.ptb'.

 (./cp1617t.ind [17] [18


])
Package atveryend Info: Empty hook `BeforeClearDocument' on input line 1864.
Package atveryend Info: Empty hook `AfterLastShipout' on input line 1864.
 (./cp1617t.aux)
Package atveryend Info: Executing hook `AtVeryEndDocument' on input line 1864.
Package atveryend Info: Executing hook `AtEndAfterFileList' on input line 1864.

Package rerunfilecheck Info: File `cp1617t.out' has not changed.
(rerunfilecheck)             Checksum: 5DC94B7046BAC0227E6F46C9CCE6DE02;364.
Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 1864.
 ) 
Here is how much of TeX's memory you used:
 10651 strings out of 493304
 145593 string characters out of 6139871
 303734 words of memory out of 5000000
 13788 multiletter control sequences out of 15000+600000
 41215 words of font info for 125 fonts, out of 8000000 for 9000
 957 hyphenation exceptions out of 8191
 32i,16n,43p,3280b,495s stack positions out of 5000i,500n,10000p,200000b,80000s
{/usr/share/texlive/texmf-dist/fonts/enc/dvips/base/8r.enc}</usr/share/texliv
e/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx10.pfb></usr/share/texlive/texm
f-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb></usr/share/texlive/texmf-dist
/fonts/type1/public/amsfonts/cm/cmmi10.pfb></usr/share/texlive/texmf-dist/fonts
/type1/public/amsfonts/cm/cmmi7.pfb></usr/share/texlive/texmf-dist/fonts/type1/
public/amsfonts/cm/cmmi9.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/
amsfonts/cm/cmr10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfont
s/cm/cmr7.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr
9.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmss10.pfb>
</usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmss8.pfb></usr/s
hare/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy10.pfb></usr/share/t
exlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy7.pfb></usr/share/texlive/
texmf-dist/fonts/type1/public/amsfonts/cm/cmti10.pfb></usr/share/texlive/texmf-
dist/fonts/type1/public/amsfonts/cm/cmti7.pfb></usr/share/texlive/texmf-dist/fo
nts/type1/public/amsfonts/cm/cmti8.pfb></usr/share/texlive/texmf-dist/fonts/typ
e1/public/amsfonts/cm/cmti9.pfb></usr/share/texlive/texmf-dist/fonts/type1/publ
ic/amsfonts/symbols/msam10.pfb></usr/share/texlive/texmf-dist/fonts/type1/publi
c/amsfonts/symbols/msbm10.pfb></usr/share/texlive/texmf-dist/fonts/type1/urw/co
urier/ucrr8a.pfb></usr/share/texlive/texmf-dist/fonts/type1/urw/palatino/uplb8a
.pfb></usr/share/texlive/texmf-dist/fonts/type1/urw/palatino/uplr8a.pfb></usr/s
hare/texlive/texmf-dist/fonts/type1/urw/palatino/uplr8a.pfb></usr/share/texlive
/texmf-dist/fonts/type1/urw/palatino/uplri8a.pfb></usr/share/texlive/texmf-dist
/fonts/type1/public/xypic/xyatip10.pfb></usr/share/texlive/texmf-dist/fonts/typ
e1/public/xypic/xybtip10.pfb>
Output written on cp1617t.pdf (18 pages, 462255 bytes).
PDF statistics:
 400 PDF objects out of 1000 (max. 8388607)
 347 compressed objects within 4 object streams
 64 named destinations out of 1000 (max. 500000)
 69 words of extra memory for PDF output out of 10000 (max. 10000000)

